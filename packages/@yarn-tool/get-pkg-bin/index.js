"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const upath2_1 = require("upath2");
const util_1 = require("./util");
function normalizePackageBins(options) {
    let { pkgRoot, pkg, name } = util_1.getPackageInfo(options);
    let bins = util_1.getPackageBins(pkg) || {};
    if (pkgRoot != null) {
        const resolveFn = (options.usePathResolve) ? ((bin) => upath2_1.resolve(pkgRoot, bin)) : ((bin) => require.resolve(bin, {
            paths: [
                pkgRoot,
            ],
        }));
        return util_1.handlePackageBins(bins, resolveFn);
    }
    return util_1.handlePackageBins(bins);
}
exports.normalizePackageBins = normalizePackageBins;
function defaultPackageBin(options, defaultKey) {
    let { pkgRoot, pkg, name } = util_1.getPackageInfo(options);
    let bins = normalizePackageBins({
        ...options,
        pkgRoot,
        pkg,
        name,
    });
    if (defaultKey == null && typeof name === 'string') {
        defaultKey = name.split('/').pop();
    }
    if (typeof defaultKey === 'string' && defaultKey in bins) {
        return bins[defaultKey];
    }
    return util_1.firstPackageBin(bins);
}
exports.defaultPackageBin = defaultPackageBin;
exports.default = normalizePackageBins;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFpQztBQUdqQyxpQ0FBOEc7QUFhOUcsU0FBZ0Isb0JBQW9CLENBQUMsT0FBaUI7SUFFckQsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcscUJBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVyRCxJQUFJLElBQUksR0FBRyxxQkFBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUVyQyxJQUFJLE9BQU8sSUFBSSxJQUFJLEVBQ25CO1FBQ0MsTUFBTSxTQUFTLEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLGdCQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO1lBQzlHLEtBQUssRUFBRTtnQkFDTixPQUFPO2FBQ1A7U0FDRCxDQUFDLENBQUMsQ0FBQztRQUVKLE9BQU8sd0JBQWlCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFBO0tBQ3pDO0lBRUQsT0FBTyx3QkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBbEJELG9EQWtCQztBQUVELFNBQWdCLGlCQUFpQixDQUFDLE9BQWlCLEVBQUUsVUFBbUI7SUFFdkUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcscUJBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVyRCxJQUFJLElBQUksR0FBRyxvQkFBb0IsQ0FBQztRQUMvQixHQUFHLE9BQU87UUFDVixPQUFPO1FBQ1AsR0FBRztRQUNILElBQUk7S0FDSixDQUFDLENBQUM7SUFFSCxJQUFJLFVBQVUsSUFBSSxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUNsRDtRQUNDLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0tBQ25DO0lBRUQsSUFBSSxPQUFPLFVBQVUsS0FBSyxRQUFRLElBQUksVUFBVSxJQUFJLElBQUksRUFDeEQ7UUFDQyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtLQUN2QjtJQUVELE9BQU8sc0JBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUM3QixDQUFDO0FBdEJELDhDQXNCQztBQUVELGtCQUFlLG9CQUFvQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzb2x2ZSB9IGZyb20gJ3VwYXRoMic7XG5pbXBvcnQgdHlwZSB7IElQYWNrYWdlSnNvbiB9IGZyb20gJ0B0cy10eXBlL3BhY2thZ2UtZHRzJztcbmltcG9ydCByZXNvbHZlUGFja2FnZSBmcm9tICdAeWFybi10b29sL3Jlc29sdmUtcGFja2FnZSc7XG5pbXBvcnQgeyBoYW5kbGVQYWNrYWdlQmlucywgZ2V0UGFja2FnZUJpbnMsIGdldFBhY2thZ2VJbmZvLCBmaXJzdFBhY2thZ2VCaW4sIElQYWNrYWdlSnNvbkxpa2UgfSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgdHlwZSBJT3B0aW9ucyA9IHtcblx0cGtnUm9vdD86IHN0cmluZyxcblx0dXNlUGF0aFJlc29sdmU/OiBib29sZWFuLFxufSAmICh7XG5cdG5hbWU/OiBzdHJpbmcsXG5cdHBrZzogSVBhY2thZ2VKc29uTGlrZSxcbn0gfCB7XG5cdG5hbWU6IHN0cmluZyxcblx0cGtnPzogSVBhY2thZ2VKc29uTGlrZSxcbn0pO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUGFja2FnZUJpbnMob3B0aW9uczogSU9wdGlvbnMpXG57XG5cdGxldCB7IHBrZ1Jvb3QsIHBrZywgbmFtZSB9ID0gZ2V0UGFja2FnZUluZm8ob3B0aW9ucyk7XG5cblx0bGV0IGJpbnMgPSBnZXRQYWNrYWdlQmlucyhwa2cpIHx8IHt9O1xuXG5cdGlmIChwa2dSb290ICE9IG51bGwpXG5cdHtcblx0XHRjb25zdCByZXNvbHZlRm4gPSAob3B0aW9ucy51c2VQYXRoUmVzb2x2ZSkgPyAoKGJpbikgPT4gcmVzb2x2ZShwa2dSb290LCBiaW4pKSA6ICgoYmluKSA9PiByZXF1aXJlLnJlc29sdmUoYmluLCB7XG5cdFx0XHRwYXRoczogW1xuXHRcdFx0XHRwa2dSb290LFxuXHRcdFx0XSxcblx0XHR9KSk7XG5cblx0XHRyZXR1cm4gaGFuZGxlUGFja2FnZUJpbnMoYmlucywgcmVzb2x2ZUZuKVxuXHR9XG5cblx0cmV0dXJuIGhhbmRsZVBhY2thZ2VCaW5zKGJpbnMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFBhY2thZ2VCaW4ob3B0aW9uczogSU9wdGlvbnMsIGRlZmF1bHRLZXk/OiBzdHJpbmcpXG57XG5cdGxldCB7IHBrZ1Jvb3QsIHBrZywgbmFtZSB9ID0gZ2V0UGFja2FnZUluZm8ob3B0aW9ucyk7XG5cblx0bGV0IGJpbnMgPSBub3JtYWxpemVQYWNrYWdlQmlucyh7XG5cdFx0Li4ub3B0aW9ucyxcblx0XHRwa2dSb290LFxuXHRcdHBrZyxcblx0XHRuYW1lLFxuXHR9KTtcblxuXHRpZiAoZGVmYXVsdEtleSA9PSBudWxsICYmIHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJylcblx0e1xuXHRcdGRlZmF1bHRLZXkgPSBuYW1lLnNwbGl0KCcvJykucG9wKCk7XG5cdH1cblxuXHRpZiAodHlwZW9mIGRlZmF1bHRLZXkgPT09ICdzdHJpbmcnICYmIGRlZmF1bHRLZXkgaW4gYmlucylcblx0e1xuXHRcdHJldHVybiBiaW5zW2RlZmF1bHRLZXldXG5cdH1cblxuXHRyZXR1cm4gZmlyc3RQYWNrYWdlQmluKGJpbnMpXG59XG5cbmV4cG9ydCBkZWZhdWx0IG5vcm1hbGl6ZVBhY2thZ2VCaW5zXG4iXX0=