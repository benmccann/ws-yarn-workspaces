import { crlf, chkcrlf, R_CRLF, LF } from 'crlf-normalize';

export const enum EnumYarnLockBanner
{
	v1 = '# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1',
	/**
	 * @see https://github.com/yarnpkg/berry/blob/4a097fa80c0fc42e3d5eb51c597bf7304e981111/packages/yarnpkg-core/sources/Project.ts#L1739
	 */
	v2 = '# This file is generated by running "yarn install" inside your project.\n# Manual changes might be lost - proceed with caution!',
}

export function existsYarnLockBanner(yarnlock_old: Buffer | string)
{
	yarnlock_old = yarnlock_old.toString();

	const lines = yarnlock_old.split(R_CRLF);

	const banners: string[] = [];
	let i = 0;

	for (i = 0; i < lines.length; i++)
	{
		const line = lines[i].trim();

		if (line === '' || line.startsWith('#'))
		{
			banners.push(lines[i])
		}
		else
		{
			break;
		}
	}

	let banner = banners.join(LF).replace(/^\n+|\n+$/g, '');

	if (banner.length > 0)
	{
		banner += '\n\n';
	}

	const content = lines.slice(i).join(LF);

	return {
		banner,
		content,
	}
}

export default existsYarnLockBanner
